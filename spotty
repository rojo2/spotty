#!/bin/bash
COLOR="\x1B[0;32m"
NO_COLOR="\x1B[0m"

function spotify-open {
  spotify &> /dev/null &
  echo -e "Opening ${COLOR}Spotify${NO_COLOR}"
}

function spotify-close {
  pkill spotify
  echo -e "Closing ${COLOR}Spotify${NO_COLOR}"
}

case $1 in
  status)
    if pgrep -x "spotify" > /dev/null
    then
      STATUS=`qdbus org.mpris.MediaPlayer2.spotify\
            /org/mpris/MediaPlayer2\
            org.freedesktop.DBus.Properties.Get\
            org.mpris.MediaPlayer2.Player\
            PlaybackStatus`

      METADATA=`qdbus \
            org.mpris.MediaPlayer2.spotify\
            /org/mpris/MediaPlayer2\
            org.freedesktop.DBus.Properties.Get\
            org.mpris.MediaPlayer2.Player\
            Metadata`

      echo -e "${COLOR}Spotify${NO_COLOR} is ${COLOR}$STATUS${NO_COLOR}\n"

      ALBUM=$(echo "$METADATA" | grep -ozP "(?<=xesam\:album\: )(.*\n)")
      ALBUM_ARTIST=$(echo "$METADATA" | grep -ozP "(?<=xesam\:albumArtist\: )(.*\n)")
      ARTIST=$(echo "$METADATA" | grep -ozP "(?<=xesam\:artist\: )(.*\n)")
      SONG=$(echo "$METADATA" | grep -ozP "(?<=xesam\:title\: )(.*\n)")
      echo -e "Artist: ${COLOR}$ARTIST${NO_COLOR}"
      echo -e "Album: ${COLOR}$ALBUM${NO_COLOR}"
      echo -e "Song: ${COLOR}$SONG${NO_COLOR}"

    else
      echo -e "${COLOR}Spotify${NO_COLOR} is ${COLOR}Not running${NO_COLOR}"
    fi
  ;;
  meta|metadata)
    if pgrep -x "spotify" > /dev/null
    then
      METADATA=`qdbus \
            org.mpris.MediaPlayer2.spotify\
            /org/mpris/MediaPlayer2\
            org.freedesktop.DBus.Properties.Get\
            org.mpris.MediaPlayer2.Player\
            Metadata`

      ALBUM=$(echo "$METADATA" | grep -ozP "(?<=xesam\:album\: )(.*\n)")
      ALBUM_ARTIST=$(echo "$METADATA" | grep -ozP "(?<=xesam\:albumArtist\: )(.*\n)")
      ARTIST=$(echo "$METADATA" | grep -ozP "(?<=xesam\:artist\: )(.*\n)")
      SONG=$(echo "$METADATA" | grep -ozP "(?<=xesam\:title\: )(.*\n)")
      echo -e "Artist: ${COLOR}$ARTIST${NO_COLOR}"
      echo -e "Album: ${COLOR}$ALBUM${NO_COLOR}"
      echo -e "Song: ${COLOR}$SONG${NO_COLOR}"
    else
      echo -e "${COLOR}Spotify${NO_COLOR} is ${COLOR}Not running${NO_COLOR}"
    fi
  ;;
  play)
    if pgrep -x "spotify" > /dev/null
    then
      dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify\
                /org/mpris/MediaPlayer2\
                org.mpris.MediaPlayer2.Player.Play > /dev/null
    fi
  ;;
  pause)
    if pgrep -x "spotify" > /dev/null
    then
      dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify\
                /org/mpris/MediaPlayer2\
                org.mpris.MediaPlayer2.Player.Pause > /dev/null
    fi
  ;;
  stop)
    if pgrep -x "spotify" > /dev/null
    then
      dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify\
                /org/mpris/MediaPlayer2\
                org.mpris.MediaPlayer2.Player.Stop > /dev/null
    fi
  ;;
  play-pause|toggle)
    if pgrep -x "spotify" > /dev/null
    then
      dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify\
                /org/mpris/MediaPlayer2\
                org.mpris.MediaPlayer2.Player.PlayPause > /dev/null
    else
      spotify-open
    fi
  ;;
  next)
    if pgrep -x "spotify" > /dev/null
    then
      dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify\
                /org/mpris/MediaPlayer2\
                org.mpris.MediaPlayer2.Player.Next > /dev/null
    fi
  ;;
  prev)
    if pgrep -x "spotify" > /dev/null
    then
      dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify\
                /org/mpris/MediaPlayer2\
                org.mpris.MediaPlayer2.Player.Previous > /dev/null
    fi
  ;;
  close|quit)
    if pgrep -x "spotify" > /dev/null
    then
      pkill spotify
    fi
  ;;
  open|start)
    if ! pgrep -x "spotify" > /dev/null
    then
      spotify-open
    fi
  ;;
  version)
    echo '0.0.1'
  ;;
  install)
    if [ $EUID != 0 ]; then
      sudo "$0" "$@"
      exit $?
    fi

    if lsb_release -ds | grep "Ubuntu" > /dev/null
    then
      if [[ $2 != '--simulate' ]] && which spotify > /dev/null
      then
        echo -e "${COLOR}Spotify${NO_COLOR} is already installed"
      else
        echo "This is going to install Spotify following these instructions:"
        echo -e "${COLOR}https://www.spotify.com/es/download/linux/${NO_COLOR}"
        read -p "Do you wanna continue?" -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
          if [[ $2 != '--simulate' ]]
          then
            # As seen in: https://www.spotify.com/es/download/linux/
            # 1. Add the Spotify repository signing key to be able to verify downloaded packages
            apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys BBEBDCB318AD50EC6865090613B00F1FD2C19886

            # 2. Add the Spotify repository
            echo deb http://repository.spotify.com stable non-free | sudo tee /etc/apt/sources.list.d/spotify.list

            # 3. Update list of available packages
            apt-get update

            # 4. Install Spotify
            apt-get install spotify-client
          else
            echo -e "Simulated ${COLOR}Spotify${NO_COLOR} installation, nothing happened"
          fi
        else
          echo -e "${COLOR}Spotify${NO_COLOR} installation skipped"
        fi
      fi

      if [[ $2 != '--simulate' ]] && which spotty > /dev/null
      then
        echo -e "${COLOR}Spotty${NO_COLOR} is already installed"
      else
        echo "This is going to install Spotty following these instructions:"
        echo -e "${COLOR}https://www.spotify.com/es/download/linux/${NO_COLOR}"
        read -p "Do you wanna continue?" -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
          if [[ $2 != '--simulate' ]]
          then
            cp spotty /usr/local/bin/spotty
          else
            echo -e "Simulated ${COLOR}Spotty${NO_COLOR} installation, nothing happened"
          fi
        else
          echo -e "${COLOR}Spotty${NO_COLOR} installation skipped"
        fi
      fi

    else
      echo -e "Use: ${COLOR}https://www.spotify.com/es/download/linux/${NO_COLOR}"
    fi
  ;;
  web|go)
    xdg-open https://www.spotify.com/es/download/linux/
  ;;
esac

